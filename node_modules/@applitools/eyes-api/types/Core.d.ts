import type { Core, EyesManager, Eyes, Target, Config, CheckSettings, TestResultSummary, TestResultContainer, TestResult } from '@applitools/core';
export declare type CoreSpec<TDriver = unknown, TElement = unknown, TSelector = unknown> = Core<TDriver, TElement, TSelector>;
export declare type CoreEyes<TDriver = unknown, TElement = unknown, TSelector = unknown> = Eyes<TDriver, TElement, TSelector, 'classic' | 'ufg'>;
export declare type CoreEyesManager<TDriver = unknown, TElement = unknown, TSelector = unknown> = EyesManager<TDriver, TElement, TSelector, 'classic' | 'ufg'>;
export declare type CoreTargetImage = Target<never, 'classic'>;
export declare type CoreConfig<TElement = unknown, TSelector = unknown> = Config<TElement, TSelector, 'classic'> & Config<TElement, TSelector, 'ufg'>;
export declare type CoreCheckSettingsAutomation<TElement = unknown, TSelector = unknown> = CheckSettings<TElement, TSelector, 'classic'> & CheckSettings<TElement, TSelector, 'ufg'>;
export declare type CoreCheckSettingsImage = CheckSettings<never, never, 'classic'>;
export declare type CoreTestResultSummary = TestResultSummary<'classic' | 'ufg'>;
export declare type CoreTestResultContainer = TestResultContainer<'classic' | 'ufg'>;
export declare type CoreTestResult = TestResult<'classic' | 'ufg'>;
