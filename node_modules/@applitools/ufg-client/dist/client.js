"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeUFGClient = exports.defaultResourceCache = void 0;
const logger_1 = require("@applitools/logger");
const requests_1 = require("./server/requests");
const create_render_target_1 = require("./create-render-target");
const book_renderer_1 = require("./book-renderer");
const render_1 = require("./render");
const process_resources_1 = require("./resources/process-resources");
const fetch_resource_1 = require("./resources/fetch-resource");
const upload_resource_1 = require("./resources/upload-resource");
const utils = __importStar(require("@applitools/utils"));
exports.defaultResourceCache = new Map();
function makeUFGClient({ config, concurrency, cache = exports.defaultResourceCache, logger, }) {
    var _a;
    logger = (_a = logger === null || logger === void 0 ? void 0 : logger.extend({ label: 'ufg client' })) !== null && _a !== void 0 ? _a : (0, logger_1.makeLogger)({ label: 'ufg client' });
    const requests = (0, requests_1.makeUFGRequests)({ config, logger });
    const fetchResource = (0, fetch_resource_1.makeFetchResource)({ logger });
    const uploadResource = (0, upload_resource_1.makeUploadResource)({ requests, logger });
    const processResources = (0, process_resources_1.makeProcessResources)({ fetchResource, uploadResource, cache, logger });
    const bookRendererWithCache = utils.general.cachify((0, book_renderer_1.makeBookRenderer)({ requests, logger }), ([{ settings }]) => settings.renderer);
    return {
        createRenderTarget: (0, create_render_target_1.makeCreateRenderTarget)({ processResources }),
        bookRenderer: bookRendererWithCache,
        render: (0, render_1.makeRender)({ requests, concurrency, logger }),
        getChromeEmulationDevices: requests.getChromeEmulationDevices,
        getAndroidDevices: requests.getAndroidDevices,
        getIOSDevices: requests.getIOSDevices,
        getCachedResourceUrls: () => Array.from(cache.keys()),
    };
}
exports.makeUFGClient = makeUFGClient;
